const { Telegraf } = require('telegraf');
const bot = new Telegraf('7871514395:AAEKXYC0n8rbfPaWmIuYjstEkf7psDgN1tQ');

bot.command('start', (ctx) => {
    const command = ctx.message.text.split(' ')[1];
    
    if (command === 'form') {
        ctx.reply('–ó–∞–ø–æ–ª–Ω–∏—Ç–µ —Ñ–æ—Ä–º—É –∑–∞–∫–∞–∑–∞:', {
            reply_markup: {
                inline_keyboard: [[{
                    text: 'üìù –û—Ç–∫—Ä—ã—Ç—å —Ñ–æ—Ä–º—É –∑–∞–∫–∞–∑–∞',
                    web_app: { 
                        url: 'https://banga22.github.io/Testo/' 
                    }
                }]]
            }
        });
    } else {
        ctx.reply(`üëã –ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç –¥–ª—è –∑–∞–∫–∞–∑–∞ 3D —É—Å–ª—É–≥.\n\n`
                + `–ß—Ç–æ–±—ã –æ—Ñ–æ—Ä–º–∏—Ç—å –∑–∞–∫–∞–∑:\n`
                + `1. –ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É –º–µ–Ω—é\n`
                + `2. –í—ã–±–µ—Ä–∏—Ç–µ "–§–æ—Ä–º–∞ –∑–∞–∫–∞–∑–∞"\n\n`
                + `–ò–ª–∏ –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –∫–æ–º–∞–Ω–¥—É /start form`);
    }
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –¥–ª—è –∫–Ω–æ–ø–∫–∏ –º–µ–Ω—é
bot.on('message', (ctx) => {
    if (ctx.message.web_app_data) {
        const data = JSON.parse(ctx.message.web_app_data.data);
        ctx.reply(`‚úÖ –ü–æ–ª—É—á–µ–Ω—ã –¥–∞–Ω–Ω—ã–µ —Ñ–æ—Ä–º—ã:\n–ò–º—è: ${data.name}\nEmail: ${data.email}`);
    }
});

bot.launch();
