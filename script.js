// –≠–ª–µ–º–µ–Ω—Ç—ã DOM
const modal = document.getElementById('bookingModal');
const openFormBtn = document.getElementById('openFormBtn');
const closeBtn = document.querySelector('.close-btn');
const bookingForm = document.getElementById('bookingForm');
const formMessage = document.getElementById('formMessage');
const executorIdInput = document.getElementById('selectedExecutorId');
const executorNameInput = document.getElementById('selectedExecutorName');

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openModal(executorId = '', executorName = '') {
    executorIdInput.value = executorId;
    executorNameInput.value = executorName;
    modal.style.display = "block";
    document.body.style.overflow = "hidden"; // –ë–ª–æ–∫–∏—Ä—É–µ–º —Å–∫—Ä–æ–ª–ª —Å—Ç—Ä–∞–Ω–∏—Ü—ã
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal() {
    modal.style.display = "none";
    document.body.style.overflow = "auto"; // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª
    bookingForm.reset();
    formMessage.textContent = '';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
openFormBtn.addEventListener('click', () => openModal());
closeBtn.addEventListener('click', closeModal);

// –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–æ–¥–∞–ª–∫–∏
window.addEventListener('click', (e) => {
    if (e.target === modal) {
        closeModal();
    }
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ "–ó–∞–ø–∏—Å–∞—Ç—å—Å—è" –≤ –∫–∞—Ä—Ç–æ—á–∫–∞—Ö
document.querySelectorAll('.btn-details').forEach(button => {
    button.addEventListener('click', () => {
        const executorId = button.getAttribute('data-executor-id');
        const executorName = button.getAttribute('data-executor-name');
        openModal(executorId, executorName);
    });
});

// –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
bookingForm.addEventListener('submit', async (e) => {
    e.preventDefault();
    
    const formData = {
        executorId: executorIdInput.value,
        executorName: executorNameInput.value,
        clientName: document.getElementById('clientName').value,
        clientPhone: document.getElementById('clientPhone').value,
        serviceType: document.getElementById('serviceType').value,
        notes: document.getElementById('bookingNotes').value
    };

    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    const message = `
        üöÄ <b>–ù–æ–≤–∞—è –∑–∞–ø–∏—Å—å!</b>
        üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> ${formData.clientName}
        üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${formData.clientPhone}
        üõ†Ô∏è <b>–£—Å–ª—É–≥–∞:</b> ${formData.serviceType}
        ${formData.executorName ? `üë®‚Äçüîß <b>–ú–∞—Å—Ç–µ—Ä:</b> ${formData.executorName}` : ''}
        ${formData.notes ? `üìù <b>–ü–æ–∂–µ–ª–∞–Ω–∏—è:</b>\n${formData.notes}` : ''}
        ‚è±Ô∏è <i>${new Date().toLocaleString('ru-RU')}</i>
    `;

    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞
    const botToken = '–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê';
    const chatId = formData.executorId || 'ID_–û–ë–©–ï–ô_–ì–†–£–ü–ü–´'; // –û—Ç–ø—Ä–∞–≤–∫–∞ –º–∞—Å—Ç–µ—Ä—É –∏–ª–∏ –≤ –æ–±—â–∏–π —á–∞—Ç

    try {
        // –û—Ç–ø—Ä–∞–≤–∫–∞ –≤ Telegram
        const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({
                chat_id: chatId,
                text: message,
                parse_mode: 'HTML'
            })
        });

        const data = await response.json();
        
        if (data.ok) {
            formMessage.textContent = '‚úÖ –ó–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!';
            formMessage.className = 'success';
            
            // –ê–≤—Ç–æ–∑–∞–∫—Ä—ã—Ç–∏–µ —á–µ—Ä–µ–∑ 2 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                closeModal();
            }, 2000);
        } else {
            formMessage.textContent = '‚ùå –û—à–∏–±–∫–∞: ' + (data.description || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞');
            formMessage.className = 'error';
        }

    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        formMessage.textContent = 'üö´ –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º';
        formMessage.className = 'error';
    }
});
