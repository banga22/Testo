document.getElementById('feedbackForm').addEventListener('submit', function(e) {
    e.preventDefault();
    
    // –ü–æ–ª—É—á–∞–µ–º –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—è
    const executorSelect = document.getElementById('executor');
    const executorId = executorSelect.value;
    const executorName = executorSelect.options[executorSelect.selectedIndex].text;
    
    // –°–±–æ—Ä –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
    const formData = {
        executor: executorName,
        name: document.getElementById('name').value,
        email: document.getElementById('email').value,
        phone: document.getElementById('phone').value,
        telegram: document.getElementById('telegram').value,
        service: document.getElementById('service').value,
        description: document.getElementById('description').value
    };
    
    // –ü—Ä–æ–≤–µ—Ä–∫–∞ Telegram –∞–∫–∫–∞—É–Ω—Ç–∞
    if (!formData.telegram.startsWith('@')) {
        formData.telegram = '@' + formData.telegram;
    }
    
    // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è Telegram
    const message = `
        üöÄ <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è ${formData.executor.split(' (')[0]}!</b>
        
        üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> ${formData.name}
        üìß <b>–ü–æ—á—Ç–∞:</b> ${formData.email}
        üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${formData.phone}
        ‚úàÔ∏è <b>Telegram:</b> ${formData.telegram}
        
        üõ†Ô∏è <b>–£—Å–ª—É–≥–∞:</b> ${formData.service}
        üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b>
        ${formData.description}
        
        ‚è±Ô∏è <i>${new Date().toLocaleString('ru-RU')}</i>
    `;
    
    // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ Telegram
    const botToken = '7871514395:AAEKXYC0n8rbfPaWmIuYjstEkf7psDgN1tQ';
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ –¥–∞–Ω–Ω—ã—Ö —á–µ—Ä–µ–∑ Telegram API –≤—ã–±—Ä–∞–Ω–Ω–æ–º—É –∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—é
    fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
        method: 'POST',
        headers: {
            'Content-Type': 'application/json'
        },
        body: JSON.stringify({
            chat_id: executorId,
            text: message,
            parse_mode: 'HTML'
        })
    })
    .then(response => response.json())
    .then(data => {
        const messageDiv = document.getElementById('message');
        if (data.ok) {
            messageDiv.textContent = `‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ${formData.executor.split(' (')[0]}!`;
            messageDiv.className = 'success';
            document.getElementById('feedbackForm').reset();
        } else {
            messageDiv.textContent = '‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: ' + data.description;
            messageDiv.className = 'error';
        }
        
        // –ê–≤—Ç–æ—Å–∫—Ä—ã—Ç–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ 5 —Å–µ–∫—É–Ω–¥
        setTimeout(() => {
            messageDiv.textContent = '';
            messageDiv.className = '';
        }, 5000);
    })
    .catch(error => {
        console.error('–û—à–∏–±–∫–∞:', error);
        const messageDiv = document.getElementById('message');
        messageDiv.textContent = 'üö´ –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ –∑–∞—è–≤–∫–∏';
        messageDiv.className = 'error';
    });
});
