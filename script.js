// DOM —ç–ª–µ–º–µ–Ω—Ç—ã
const modal = document.getElementById('bookingModal');
const bookingForm = document.getElementById('bookingForm');
const formMessage = document.getElementById('formMessage');
const tgAlert = document.getElementById('tgAlert');
const tgAlertClose = document.querySelector('.tg-alert-close');
const clientTgInput = document.getElementById('clientTg');
const tgSource = document.getElementById('tgSource');

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Telegram WebApp
function initTelegramWebApp() {
    if (typeof Telegram !== 'undefined' && Telegram.WebApp) {
        Telegram.WebApp.ready();
        Telegram.WebApp.expand();
        
        const user = Telegram.WebApp.initDataUnsafe?.user;
        if (user?.username) {
            clientTgInput.value = `@${user.username}`;
            tgSource.textContent = '–î–∞–Ω–Ω—ã–µ –∏–∑ Telegram';
            tgSource.className = 'tg-source tg-verified';
            return true;
        }
    }
    return false;
}

// –ü–æ–∫–∞–∑–∞—Ç—å –ø—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –¥–ª—è –Ω–µ-Telegram –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
function showTelegramAlert() {
    if (!initTelegramWebApp()) {
        clientTgInput.readOnly = false;
        clientTgInput.placeholder = "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à Telegram";
        tgSource.textContent = '–ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –æ—Ç–∫—Ä—ã—Ç–æ –≤–Ω–µ Telegram';
        tgSource.className = 'tg-source tg-external';
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º alert —Ç–æ–ª—å–∫–æ –Ω–∞ –º–æ–±–∏–ª—å–Ω—ã—Ö —É—Å—Ç—Ä–æ–π—Å—Ç–≤–∞—Ö
        if (/Android|webOS|iPhone|iPad|iPod|BlackBerry|IEMobile|Opera Mini/i.test(navigator.userAgent)) {
            tgAlert.style.display = 'block';
        }
    }
}

// –û—Ç–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function openModal(executorId, executorName) {
    document.getElementById('masterId').value = executorId || '';
    document.getElementById('masterName').value = executorName || '';
    modal.style.display = 'block';
    document.body.style.overflow = 'hidden';
}

// –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function closeModal() {
    modal.style.display = 'none';
    document.body.style.overflow = 'auto';
    bookingForm.reset();
    formMessage.textContent = '';
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
document.addEventListener('DOMContentLoaded', () => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
    showTelegramAlert();
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –º–æ–¥–∞–ª–∫–∏
    document.querySelector('.close').addEventListener('click', closeModal);
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø—Ä–∏ –∫–ª–∏–∫–µ –≤–Ω–µ –º–æ–¥–∞–ª–∫–∏
    window.addEventListener('click', (e) => {
        if (e.target === modal) closeModal();
    });
    
    // –ó–∞–∫—Ä—ã—Ç–∏–µ Telegram alert
    tgAlertClose.addEventListener('click', () => {
        tgAlert.style.display = 'none';
    });
    
    // –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫ –∑–∞–ø–∏—Å–∏
    document.querySelectorAll('.btn-book').forEach(btn => {
        btn.addEventListener('click', () => {
            openModal(btn.dataset.tgId, btn.dataset.name);
        });
    });
    
    // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ñ–æ—Ä–º—ã
    bookingForm.addEventListener('submit', async (e) => {
        e.preventDefault();
        
        const formData = {
            masterId: document.getElementById('masterId').value,
            masterName: document.getElementById('masterName').value,
            clientName: document.getElementById('clientName').value,
            clientPhone: document.getElementById('clientPhone').value,
            clientTg: clientTgInput.value,
            service: document.getElementById('service').value
        };
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        const message = `
            üöÄ <b>–ù–û–í–ê–Ø –ó–ê–ü–ò–°–¨</b>
            üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> ${formData.clientName}
            üìû <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${formData.clientPhone}
            ‚úàÔ∏è <b>Telegram:</b> ${formData.clientTg}
            üõ†Ô∏è <b>–£—Å–ª—É–≥–∞:</b> ${formData.service}
            ${formData.masterName ? `üë®‚Äçüîß <b>–ú–∞—Å—Ç–µ—Ä:</b> ${formData.masterName}` : ''}
            ‚è± <i>${new Date().toLocaleString('ru-RU')}</i>
        `;
        
        // –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±–æ—Ç–∞ (–ó–ê–ú–ï–ù–ò–¢–ï –ù–ê –°–í–û–ò!)
        const botToken = '–í–ê–®_–¢–û–ö–ï–ù_–ë–û–¢–ê';
        const chatId = formData.masterId || 'ID_–û–ë–©–ï–ì–û_–ß–ê–¢–ê';
        
        try {
            const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
                method: 'POST',
                headers: { 'Content-Type': 'application/json' },
                body: JSON.stringify({
                    chat_id: chatId,
                    text: message,
                    parse_mode: 'HTML'
                })
            });
            
            const data = await response.json();
            
            if (data.ok) {
                formMessage.textContent = '‚úÖ –ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞!';
                formMessage.className = 'success';
                setTimeout(closeModal, 2000);
            } else {
                formMessage.textContent = `‚ùå –û—à–∏–±–∫–∞: ${data.description || '–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'}`;
                formMessage.className = 'error';
            }
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞:', error);
            formMessage.textContent = 'üö´ –û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è';
            formMessage.className = 'error';
        }
    });
});

// –î–ª—è –æ—Ç–ª–∞–¥–∫–∏ –≤ –∫–æ–Ω—Å–æ–ª–∏
console.log('App initialized');
if (window.Telegram?.WebApp) {
    console.log('Telegram WebApp detected:', Telegram.WebApp.initDataUnsafe);
} else {
    console.log('Running in regular browser');
}
