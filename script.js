document.addEventListener('DOMContentLoaded', function() {
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –æ—Ç–∫—Ä—ã—Ç–æ –ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ Telegram
    const isTelegram = window.Telegram && Telegram.WebApp;
    const telegramField = document.getElementById('telegram');
    
    if (isTelegram) {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º WebApp
        Telegram.WebApp.ready();
        Telegram.WebApp.expand();
        
        // –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        const tgUser = Telegram.WebApp.initDataUnsafe?.user;
        
        if (tgUser) {
            // –ó–∞–ø–æ–ª–Ω—è–µ–º –∏–º—è
            document.getElementById('name').value = tgUser.first_name || '';
            
            // –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–æ–ª–µ Telegram
            if (tgUser.username) {
                telegramField.value = `@${tgUser.username}`;
            } else {
                // –ï—Å–ª–∏ username –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç, –∏—Å–ø–æ–ª—å–∑—É–µ–º user ID
                telegramField.value = `user_${tgUser.id}`;
            }
        } else {
            // –ï—Å–ª–∏ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã
            telegramField.value = "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ";
        }
        
        // –î–µ–ª–∞–µ–º –ø–æ–ª–µ –Ω–µ—Ä–µ–¥–∞–∫—Ç–∏—Ä—É–µ–º—ã–º –∏ –º–µ–Ω—è–µ–º —Å—Ç–∏–ª—å
        telegramField.readOnly = true;
        telegramField.classList.add('telegram-auto');
    } else {
        // –ï—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–æ –≤ –æ–±—ã—á–Ω–æ–º –±—Ä–∞—É–∑–µ—Ä–µ
        telegramField.value = "–û—Ç–∫—Ä–æ–π—Ç–µ –≤ Telegram";
        telegramField.readOnly = true;
        telegramField.classList.add('telegram-auto');
    }
});

document.getElementById('feedbackForm').addEventListener('submit', async function(e) {
    e.preventDefault();
    
    // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
    const submitBtn = e.target.querySelector('button[type="submit"]');
    const originalBtnText = submitBtn.textContent;
    submitBtn.disabled = true;
    submitBtn.textContent = '–û—Ç–ø—Ä–∞–≤–∫–∞...';
    
    try {
        // –ü–æ–ª—É—á–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö —Ñ–æ—Ä–º—ã
        const executorSelect = document.getElementById('executor');
        const executorId = executorSelect.value;
        const executorName = executorSelect.options[executorSelect.selectedIndex].text;
        
        // –í–∞–ª–∏–¥–∞—Ü–∏—è –¥–∞–Ω–Ω—ã—Ö
        const name = document.getElementById('name').value.trim();
        const email = document.getElementById('email').value.trim();
        const phone = document.getElementById('phone').value.trim();
        const telegram = document.getElementById('telegram').value.trim();
        const service = document.getElementById('service').value;
        const description = document.getElementById('description').value.trim();
        
        // –ü—Ä–æ–≤–µ—Ä–∫–∞ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã—Ö –ø–æ–ª–µ–π
        if (!executorId || !name || !email || !phone || !service || !description) {
            showMessage('‚ùå –ó–∞–ø–æ–ª–Ω–∏—Ç–µ –≤—Å–µ –æ–±—è–∑–∞—Ç–µ–ª—å–Ω—ã–µ –ø–æ–ª—è!', 'error', 3000);
            return;
        }
        
        // –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        const message = `
üöÄ <b>–ù–æ–≤—ã–π –∑–∞–∫–∞–∑ –¥–ª—è ${executorName.split(' (')[0]}!</b>

üë§ <b>–ö–ª–∏–µ–Ω—Ç:</b> ${name}
üìß <b>–ü–æ—á—Ç–∞:</b> ${email}
üì± <b>–¢–µ–ª–µ—Ñ–æ–Ω:</b> ${phone}
‚úàÔ∏è <b>Telegram:</b> ${telegram}
üõ†Ô∏è <b>–£—Å–ª—É–≥–∞:</b> ${service}
üìù <b>–û–ø–∏—Å–∞–Ω–∏–µ:</b> 
${description}
‚è±Ô∏è <i>${new Date().toLocaleString('ru-RU')}</i>
        `;
        
        // –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (—É—á–µ–±–Ω—ã–π)
        const botToken = '7871514395:AAEKXYC0n8rbfPaWmIuYjstEkf7psDgN1tQ';
        
        // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è —á–µ—Ä–µ–∑ Telegram API
        const response = await fetch(`https://api.telegram.org/bot${botToken}/sendMessage`, {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                chat_id: executorId,
                text: message,
                parse_mode: 'HTML'
            })
        });
        
        const data = await response.json();
        
        if (data.ok) {
            showMessage(`‚úÖ –ó–∞—è–≤–∫–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ ${executorName.split(' (')[0]}!`, 'success', 5000);
            document.getElementById('feedbackForm').reset();
            
            // –ó–∞–∫—Ä—ã—Ç—å –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ, –µ—Å–ª–∏ –æ—Ç–∫—Ä—ã—Ç–æ –≤ Telegram
            if (window.Telegram && Telegram.WebApp && Telegram.WebApp.close) {
                setTimeout(() => Telegram.WebApp.close(), 2000);
            }
        } else {
            throw new Error(data.description || '–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è');
        }
    } catch (error) {
        console.error('–û—à–∏–±–∫–∞:', error);
        showMessage(`üö´ –û—à–∏–±–∫–∞: ${error.message || '–ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ'}`, 'error', 5000);
    } finally {
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        submitBtn.disabled = false;
        submitBtn.textContent = originalBtnText;
    }
});

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏–π
function showMessage(text, className, timeout = 5000) {
    const messageDiv = document.getElementById('message');
    messageDiv.textContent = text;
    messageDiv.className = className;
    
    if (timeout
